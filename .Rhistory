# #Initial linear regression for set 3 visits
# visits3<-data.frame(learning = learning3$`Number of Visits`, set = set3$`Number of Visits`)
# visitFit3<-lm(set~learning, data = visits3)
# summary(visitFit3)$coefficients
#
# #Initial linear regression for set 3 uniques
# unique2<-data.frame(learning = learning3$`Percent Unique`, set = set3$`Percent Unique`)
# uniqueFit3<-lm(set~learning, data = visits3)
# summary(uniqueFit3)$coefficients
#cleaning outliers
#Getting rid of outliers
#for (i in 1:length(visi))
g<-ggplot(set1, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 1 No of Visits", x = "Learning Set No of Visits")
source('D:/Dropbox/github repositories/SW/SimilarWeb/functions.R')
learning_set_clustered<-learning_set[clustering(learning_set$NoV, learning_set$PU),]
rm(list = ls())
gc()
source('functions.R')
dev.off()
#load packages
library(dplyr)
library(ggplot2)
#Import data
DQ_Data<-read.table(file = 'DQ_Data_b.tsv', sep = '\t', header = TRUE)
DQ_Data<-arrange(DQ_Data, site)
head(DQ_Data)
#Names refined
names(DQ_Data)[3]<-"PU"
names(DQ_Data)[4]<-"NoV"
#subset
learning_set<-subset(DQ_Data,source==0)
set1<-subset(DQ_Data,source==1)
set2<-subset(DQ_Data,source==2)
set3<-subset(DQ_Data,source==3)
#make sure the sets don't have any data irrelevant to the learning set
set1<-subset(set1, set1$site %in% learning_set$site)
set2<-subset(set2, set2$site %in% learning_set$site)
set3<-subset(set3, set3$site %in% learning_set$site)
#subsetting learning set by each data set
learning1<-subset(learning_set, learning_set$site %in% set1$site)
learning2<-subset(learning_set, learning_set$site %in% set2$site)
learning3<-subset(learning_set, learning_set$site %in% set3$site)
set1$LPU<-learning1$PU
set2$LPU<-learning2$PU
set3$LPU<-learning3$PU
set1$LNoV<-learning1$NoV
set2$LNoV<-learning2$NoV
set3$LNoV<-learning3$NoV
#Learning Set Analysis
g<-ggplot(learning_set, aes(x = NoV, y = PU))
g<-g+geom_point(col = "blue", alpha = 0.2)+labs(x = "No of Visits", y = "Percent Unique", title = "Raw Learning Set")
g #outliers on NoV
dev.copy(png,file = "Raw Learning Set.png", height = 480, width = 480, units = "px")
dev.off()
#Data seems limited to under 1e8
#Histogram of Visit count
q2<-qplot(NoV, data = learning_set,xlab = "Number of Visits", bins = 10)
q2
dev.copy(png,file = "Learning No of Visits.png", height = 480, width = 480, units = "px")
dev.off()
#k-means clustering
# kframe<-with(learning_set,cbind(NoV,PU))
# km<-kmeans(kframe, centers = 2)
# learning_set_clustered<-learning_set
# if (length(km$cluster[km$cluster==1])/length(km$cluster)>0.95)
# {
#        learning_set_clustered<-learning_set[km$cluster==1,]
# }
#
# if (length(km$cluster[km$cluster==2])/length(km$cluster)>0.95)
# {
#         learning_set_clustered<-learning_set[km$cluster==2,]
# }
learning_set_clustered<-learning_set[clustering(learning_set$NoV, learning_set$PU),]
plotLinearRegression(learning_set_clustered$NoV, learning_set_clustered$PU)+labs(x="No of Visits", y="Percent Unique")
dev.copy(png,file = "Learning No of Visits.png", height = 480, width = 480, units = "px")
dev.off()
learning_set_clustered_Clean<-learning_set_clustered[-Outliers(learning_set_clustered$NoV,learning_set_clustered$PU),]
g<-ggplot(set1, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 1 No of Visits", x = "Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 1 No of Visits Scatterplot.png", height = 480, width = 480, units = "px")
dev.off()
qplot(LNoV, data = set1)
dev.copy(png,file = "Learning v Set 1 No of Visits Histogram.png", height = 480, width = 480, units = "px")
dev.off()
g<-ggplot(set1, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 1 No of Visits", x = "Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 1 No of Visits Scatterplot.png", height = 480, width = 480, units = "px")
dev.off()
qplot(LNoV, data = set1)
dev.copy(png,file = "Learning v Set 1 No of Visits Histogram.png", height = 480, width = 480, units = "px")
dev.off()
set1_clustered<-set1[clustering(set1$LNoV, set1$NoV),]
plot(LNoV, data = set1_clustered)
qplot(LNoV, data = set1_clustered)
NoV_set1_v_learningSet<-set1_clustered_NoV[-Outliers(set1$NoV,set1$LNoV),]
NoV_set1_v_learningSet<-set1_clustered[-Outliers(set1$NoV,set1$LNoV),]
source('functions.R')
NoV_set1_v_learningSet<-set1_clustered[-Outliers(set1$NoV,set1$LNoV),]
g<-ggplot(NoV_set1_v_learningSet, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 1 No of Visits", x = "Learning Set No of Visits")
plotLinearRegression(NoV_set1_v_learningSet$LNoV, NoV_set1_v_learningSet$NoV)+labs(y="Set 1 No of Visits", x="Learning Set No of Visits")
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 1 No of Visits", x = "Learning Set No of Visits")
plotLinearRegression(NoV_set1_v_learningSet$LNoV, NoV_set1_v_learningSet$NoV)+labs(y="Set 1 No of Visits", x="Learning Set No of Visits")
qplot(NoV_set1_v_learningSet$LNoV)
rm(list = ls())
gc()
source('functions.R')
dev.off()
#load packages
library(dplyr)
library(ggplot2)
#Import data
DQ_Data<-read.table(file = 'DQ_Data_b.tsv', sep = '\t', header = TRUE)
DQ_Data<-arrange(DQ_Data, site)
head(DQ_Data)
#Names refined
names(DQ_Data)[3]<-"PU"
names(DQ_Data)[4]<-"NoV"
#subset
learning_set<-subset(DQ_Data,source==0)
set1<-subset(DQ_Data,source==1)
set2<-subset(DQ_Data,source==2)
set3<-subset(DQ_Data,source==3)
#make sure the sets don't have any data irrelevant to the learning set
set1<-subset(set1, set1$site %in% learning_set$site)
set2<-subset(set2, set2$site %in% learning_set$site)
set3<-subset(set3, set3$site %in% learning_set$site)
#subsetting learning set by each data set
learning1<-subset(learning_set, learning_set$site %in% set1$site)
learning2<-subset(learning_set, learning_set$site %in% set2$site)
learning3<-subset(learning_set, learning_set$site %in% set3$site)
set1$LPU<-learning1$PU
set2$LPU<-learning2$PU
set3$LPU<-learning3$PU
set1$LNoV<-learning1$NoV
set2$LNoV<-learning2$NoV
set3$LNoV<-learning3$NoV
g<-ggplot(learning_set, aes(x = NoV, y = PU))
g<-g+geom_point(col = "blue", alpha = 0.2)+labs(x = "No of Visits", y = "Percent Unique", title = "Raw Learning Set")
g
dev.copy(png,file = "Raw Learning Set.png", height = 480, width = 480, units = "px")
dev.off()
q2<-qplot(NoV, data = learning_set,xlab = "Number of Visits", bins = 10)
q2
dev.copy(png,file = "Raw Learning No of Visits Histogram.png", height = 480, width = 480, units = "px")
dev.off()
learning_set_clustered<-learning_set[clustering(learning_set$NoV, learning_set$PU),]
q2<-qplot(NoV, data = learning_set_clustered,xlab = "Number of Visits", bins = 10)
q2
dev.copy(png,file = "Learning set after clustering.png", height = 480, width = 480, units = "px")
dev.off()
plotLinearRegression(learning_set_clustered$NoV, learning_set_clustered$PU)+labs(x="No of Visits", y="Percent Unique")
dev.copy(png,file = "Learning No of Visits with Regression.png", height = 480, width = 480, units = "px")
dev.off()
fitLearning<-lm(PU~NoV, data = learning_set_clustered)
fitLearning$coefficients
g<-ggplot(set3, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 3 No of Visits", x = "Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 3 No of Visits Scatterplot.png", height = 480, width = 480, units = "px")
dev.off()
qplot(LNoV, data = set3)
dev.copy(png,file = "Learning v Set 3 No of Visits Histogram.png", height = 480, width = 480, units = "px")
dev.off()
set3_clustered<-set3[clustering(set3$LNoV, set3$NoV),]
#set3_short_NoV<-set3[set3$LNoV<1e7,]
qplot(LNoV, data = set3_clustered)
NoV_set3_v_learningSet<-set3_clustered[-Outliers(set3$NoV,set3$LNoV),]
g<-ggplot(NoV_set3_v_learningSet, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 3 No of Visits", x = "Learning Set No of Visits")
plotLinearRegression(NoV_set3_v_learningSet$LNoV, NoV_set3_v_learningSet$NoV)+labs(y="Set 3 No of Visits", x="Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 3 No of Visits Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
g<-ggplot(set3, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 3 No of Visits", x = "Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 3 No of Visits Scatterplot.png", height = 480, width = 480, units = "px")
dev.off()
qplot(LNoV, data = set3)
dev.copy(png,file = "Learning v Set 3 No of Visits Histogram.png", height = 480, width = 480, units = "px")
dev.off()
set3_clustered<-set3[clustering(set3$LNoV, set3$NoV),]
#set3_short_NoV<-set3[set3$LNoV<1e7,]
qplot(LNoV, data = set3_clustered)
NoV_set3_v_learningSet<-set3_clustered[-Outliers(set3$NoV,set3$LNoV),]
g<-ggplot(NoV_set3_v_learningSet, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 3 No of Visits", x = "Learning Set No of Visits")
plotLinearRegression(NoV_set3_v_learningSet$LNoV, NoV_set3_v_learningSet$NoV)+labs(y="Set 3 No of Visits", x="Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 3 No of Visits Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
g<-ggplot(set2, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 2 No of Visits", x = "Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 2 No of Visits Scatterplot.png", height = 480, width = 480, units = "px")
dev.off()
qplot(LNoV, data = set2)
dev.copy(png,file = "Learning v Set 2 No of Visits Histogram.png", height = 480, width = 480, units = "px")
dev.off()
set2_clustered<-set2[clustering(set2$LNoV, set2$NoV),]
#set2_short_NoV<-set2[set2$LNoV<1e7,]
qplot(LNoV, data = set2_clustered)
NoV_set2_v_learningSet<-set2_clustered[-Outliers(set2$NoV,set2$LNoV),]
g<-ggplot(NoV_set2_v_learningSet, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 2 No of Visits", x = "Learning Set No of Visits")
plotLinearRegression(NoV_set2_v_learningSet$LNoV, NoV_set2_v_learningSet$NoV)+labs(y="Set 2 No of Visits", x="Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 2 No of Visits Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
g<-ggplot(set3, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 3 No of Visits", x = "Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 3 No of Visits Scatterplot.png", height = 480, width = 480, units = "px")
dev.off()
qplot(LNoV, data = set3)
dev.copy(png,file = "Learning v Set 3 No of Visits Histogram.png", height = 480, width = 480, units = "px")
dev.off()
set3_clustered<-set3[clustering(set3$LNoV, set3$NoV),]
#set3_short_NoV<-set3[set3$LNoV<1e7,]
qplot(LNoV, data = set3_clustered)
qplot(LNoV, data = set3_clustered)
NoV_set3_v_learningSet<-set3_clustered[-Outliers(set3$NoV,set3$LNoV),]
g<-ggplot(NoV_set3_v_learningSet, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 3 No of Visits", x = "Learning Set No of Visits")
plotLinearRegression(NoV_set2_v_learningSet$LNoV, NoV_set2_v_learningSet$NoV)+labs(y="Set 2 No of Visits", x="Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 2 No of Visits Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
g<-ggplot(set3, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 3 No of Visits", x = "Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 3 No of Visits Scatterplot.png", height = 480, width = 480, units = "px")
dev.off()
qplot(LNoV, data = set3)
dev.copy(png,file = "Learning v Set 3 No of Visits Histogram.png", height = 480, width = 480, units = "px")
dev.off()
set3_clustered<-set3[clustering(set3$LNoV, set3$NoV),]
#set3_short_NoV<-set3[set3$LNoV<1e7,]
qplot(LNoV, data = set3_clustered)
NoV_set3_v_learningSet<-set3_clustered[-Outliers(set3_clustered$NoV,set3_clustered$LNoV),]
g<-ggplot(NoV_set3_v_learningSet, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 3 No of Visits", x = "Learning Set No of Visits")
plotLinearRegression(NoV_set3_v_learningSet$LNoV, NoV_set3_v_learningSet$NoV)+labs(y="Set 3 No of Visits", x="Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 3 No of Visits Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
NoV_set3_v_learningSet<-set3_clustered %[-Outliers(set3_clustered$NoV,set3_clustered$LNoV),]
g<-ggplot(NoV_set3_v_learningSet, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 3 No of Visits", x = "Learning Set No of Visits")
plotLinearRegression(NoV_set3_v_learningSet$LNoV, NoV_set3_v_learningSet$NoV)+labs(y="Set 3 No of Visits", x="Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 3 No of Visits Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
NoV_set3_v_learningSet<-set3_clustered
g<-ggplot(NoV_set3_v_learningSet, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 3 No of Visits", x = "Learning Set No of Visits")
plotLinearRegression(NoV_set3_v_learningSet$LNoV, NoV_set3_v_learningSet$NoV)+labs(y="Set 3 No of Visits", x="Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 3 No of Visits Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
NoV_set3_v_learningSet<-set3_clustered[-Outliers(set3_clustered$NoV,set3_clustered$LNoV),]
g<-ggplot(NoV_set3_v_learningSet, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 3 No of Visits", x = "Learning Set No of Visits")
plotLinearRegression(NoV_set3_v_learningSet$LNoV, NoV_set3_v_learningSet$NoV)+labs(y="Set 3 No of Visits", x="Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 3 No of Visits Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
plot(set3_clustered$NoV, set3_clustered$PU)
plot(set2_clustered$NoV, set2_clustered$PU)
plot(set1_clustered$NoV, set1_clustered$PU)
plot(set1_clustered$NoV, set1_clustered$PU)
g<-ggplot(set1, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 1 No of Visits", x = "Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 1 No of Visits Scatterplot.png", height = 480, width = 480, units = "px")
dev.off()
qplot(LNoV, data = set1)
dev.copy(png,file = "Learning v Set 1 No of Visits Histogram.png", height = 480, width = 480, units = "px")
dev.off()
set1_clustered<-set1[clustering(set1$LNoV, set1$NoV),]
#set1_short_NoV<-set1[set1$LNoV<1e7,]
qplot(LNoV, data = set1_clustered)
NoV_set1_v_learningSet<-set1_clustered[-Outliers(set1$NoV,set1$LNoV),]
g<-ggplot(NoV_set1_v_learningSet, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 1 No of Visits", x = "Learning Set No of Visits")
plotLinearRegression(NoV_set1_v_learningSet$LNoV, NoV_set1_v_learningSet$NoV)+labs(y="Set 1 No of Visits", x="Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 1 No of Visits Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
g<-ggplot(set1, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 1 No of Visits", x = "Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 1 No of Visits Scatterplot.png", height = 480, width = 480, units = "px")
dev.off()
qplot(LNoV, data = set1)
dev.copy(png,file = "Learning v Set 1 No of Visits Histogram.png", height = 480, width = 480, units = "px")
dev.off()
set1_clustered<-set1[clustering(set1$LNoV, set1$NoV),]
#set1_short_NoV<-set1[set1$LNoV<1e7,]
qplot(LNoV, data = set1_clustered)
NoV_set1_v_learningSet<-set1_clustered[-Outliers(set1$NoV,set1$LNoV),]
g<-ggplot(NoV_set1_v_learningSet, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 1 No of Visits", x = "Learning Set No of Visits")
plotLinearRegression(NoV_set1_v_learningSet$LNoV, NoV_set1_v_learningSet$NoV)+labs(y="Set 1 No of Visits", x="Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 1 No of Visits Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
g<-ggplot(set3, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 3 No of Visits", x = "Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 3 No of Visits Scatterplot.png", height = 480, width = 480, units = "px")
dev.off()
qplot(LNoV, data = set3)
dev.copy(png,file = "Learning v Set 3 No of Visits Histogram.png", height = 480, width = 480, units = "px")
dev.off()
set3_clustered<-set3[clustering(set3$LNoV, set3$NoV),]
#set3_short_NoV<-set3[set3$LNoV<1e7,]
qplot(LNoV, data = set3_clustered)
NoV_set3_v_learningSet<-set3_clustered
g<-ggplot(NoV_set3_v_learningSet, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 3 No of Visits", x = "Learning Set No of Visits")
plotLinearRegression(NoV_set3_v_learningSet$LNoV, NoV_set3_v_learningSet$NoV)+labs(y="Set 3 No of Visits", x="Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 3 No of Visits Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
plot(set1_clustered$NoV, set1_clustered$PU)
plot(set2_clustered$NoV, set2_clustered$PU)
plot(set3_clustered$NoV, set3_clustered$PU)
plot(set3$NoV, set3$PU)
plot(set2$NoV, set2$PU)
plot(set1$NoV, set1$PU)
plot(learning1$NoV, learning1$PU)
plot(learning2$NoV, learning2$PU)
plot(learning2$NoV, learning2$PU)
plot(learning3$NoV, learning3$PU)
plot(set3$NoV, set3$PU)
fitLearning<-lm(PU~NoV, data = learning_set_clustered)
fitLearning$coefficients
fitSet1vsLearning<-lm(NoV~LNoV, data = set1_clustered)
fitSet1vsLearning$coefficients
plotLinearRegression(PU_set1_v_learningSet$NoV, PU_set1_v_learningSet$PU)+labs(y="Set 1 Percent Unique", x="Set 1 No of Visits")
dev.copy(png,file = "Set 1 No of Visits Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
fitSet1<-lm(PU~NoV, data = set1_clustered)
fitSet1vsLearning<-lm(NoV~LNoV, data = set1_clustered)
PU_set1_v_learningSet<-set1_clustered[-Outliers(set1$NoV,set1$PU),]
# g<-ggplot(NoV_set1_v_learningSet, aes(y = NoV, x = LNoV))
# g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 1 No of Visits", x = "Learning Set No of Visits")
plotLinearRegression(NoV_set1_v_learningSet$LNoV, NoV_set1_v_learningSet$NoV)+labs(y="Set 1 No of Visits", x="Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 1 No of Visits Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
plotLinearRegression(PU_set1_v_learningSet$NoV, PU_set1_v_learningSet$PU)+labs(y="Set 1 Percent Unique", x="Set 1 No of Visits")
dev.copy(png,file = "Set 1 No of Visits vs PU Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
fitSet1<-lm(PU~NoV, data = set1_clustered)
fitSet1vsLearning<-lm(NoV~LNoV, data = set1_clustered)
fitSet1$coefficients
PU_set2_v_learningSet<-set2_clustered[-Outliers(set2$NoV,set2$PU),]
plotLinearRegression(NoV_set2_v_learningSet$LNoV, NoV_set2_v_learningSet$NoV)+labs(y="Set 2 No of Visits", x="Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 2 No of Visits Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
plotLinearRegression(PU_set2_v_learningSet$NoV, PU_set2_v_learningSet$PU)+labs(y="Set 1 Percent Unique", x="Set 1 No of Visits")
dev.copy(png,file = "Set 2 No of Visits vs PU Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
fitset2<-lm(PU~NoV, data = set2_clustered)
fitset2vsLearning<-lm(NoV~LNoV, data = set2_clustered)
PU_set2_v_learningSet<-set2_clustered[-Outliers(set2$NoV,set2$PU),]
plotLinearRegression(NoV_set2_v_learningSet$LNoV, NoV_set2_v_learningSet$NoV)+labs(y="Set 2 No of Visits", x="Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 2 No of Visits Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
plotLinearRegression(PU_set2_v_learningSet$NoV, PU_set2_v_learningSet$PU)+labs(y="Set 1 Percent Unique", x="Set 1 No of Visits")
dev.copy(png,file = "Set 2 No of Visits vs PU Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
fitset2<-lm(PU~NoV, data = set2_clustered)
fitset2vsLearning<-lm(NoV~LNoV, data = set2_clustered)
PU_set3_v_learningSet<-set3_clustered[-Outliers(set3$NoV,set3$PU),]
plotLinearRegression(NoV_set3_v_learningSet$LNoV, NoV_set3_v_learningSet$NoV)+labs(y="Set 3 No of Visits", x="Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 3 No of Visits Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
plotLinearRegression(PU_set3_v_learningSet$NoV, PU_set3_v_learningSet$PU)+labs(y="Set 1 Percent Unique", x="Set 1 No of Visits")
dev.copy(png,file = "Set 3 No of Visits vs PU Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
fitset3<-lm(PU~NoV, data = set3_clustered)
fitset3vsLearning<-lm(NoV~LNoV, data = set3_clustered)
plotLinearRegression(NoV_set2_v_learningSet$LNoV, NoV_set2_v_learningSet$NoV)+labs(y="Set 2 No of Visits", x="Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 2 No of Visits Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
plotLinearRegression(PU_set2_v_learningSet$NoV, PU_set2_v_learningSet$PU)+labs(y="Set 2 Percent Unique", x="Set 2 No of Visits")
dev.copy(png,file = "Set 2 No of Visits vs PU Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
fitset2<-lm(PU~NoV, data = set2_clustered)
fitset2vsLearning<-lm(NoV~LNoV, data = set2_clustered)
fitset2vsLearning$coefficients
fitset2$coefficients
fitset3vsLearning
fitset3vsLearning$coefficients
fitset3$coefficients
rm(list = ls())
gc()
source('functions.R')
dev.off()
#load packages
library(dplyr)
library(ggplot2)
#Import data
DQ_Data<-read.table(file = 'DQ_Data_b.tsv', sep = '\t', header = TRUE)
DQ_Data<-arrange(DQ_Data, site)
head(DQ_Data)
#Names refined
names(DQ_Data)[3]<-"PU"
names(DQ_Data)[4]<-"NoV"
#subset
learning_set<-subset(DQ_Data,source==0)
set1<-subset(DQ_Data,source==1)
set2<-subset(DQ_Data,source==2)
set3<-subset(DQ_Data,source==3)
#make sure the sets don't have any data irrelevant to the learning set
set1<-subset(set1, set1$site %in% learning_set$site)
set2<-subset(set2, set2$site %in% learning_set$site)
set3<-subset(set3, set3$site %in% learning_set$site)
#subsetting learning set by each data set
learning1<-subset(learning_set, learning_set$site %in% set1$site)
learning2<-subset(learning_set, learning_set$site %in% set2$site)
learning3<-subset(learning_set, learning_set$site %in% set3$site)
#attaching the learning set data to relevant test sets
set1$LPU<-learning1$PU
set2$LPU<-learning2$PU
set3$LPU<-learning3$PU
set1$LNoV<-learning1$NoV
set2$LNoV<-learning2$NoV
set3$LNoV<-learning3$NoV
#Learning Set Analysis
g<-ggplot(learning_set, aes(x = NoV, y = PU))
g<-g+geom_point(col = "blue", alpha = 0.2)+labs(x = "No of Visits", y = "Percent Unique", title = "Raw Learning Set")
g
dev.copy(png,file = "Raw Learning Set.png", height = 480, width = 480, units = "px")
dev.off()
#Data seems limited to under 1e8
#Histogram of Visit count
q2<-qplot(NoV, data = learning_set,xlab = "Number of Visits", bins = 10)
q2
dev.copy(png,file = "Raw Learning No of Visits Histogram.png", height = 480, width = 480, units = "px")
dev.off()
#clustering of learning set by k-means
learning_set_clustered<-learning_set[clustering(learning_set$NoV, learning_set$PU),]
#Histogram of post-clustering learning set
q2<-qplot(NoV, data = learning_set_clustered,xlab = "Number of Visits", bins = 10)
q2
dev.copy(png,file = "Learning set after clustering Histogram.png", height = 480, width = 480, units = "px")
dev.off()
#Regression plot. Red lines signify confidence interval
plotLinearRegression(learning_set_clustered$NoV, learning_set_clustered$PU)+labs(x="No of Visits", y="Percent Unique")
dev.copy(png,file = "Learning No of Visits with Regression.png", height = 480, width = 480, units = "px")
dev.off()
fitLearning<-lm(PU~NoV, data = learning_set_clustered)
#initial scatterplot
g<-ggplot(set1, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 1 No of Visits", x = "Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 1 No of Visits Scatterplot.png", height = 480, width = 480, units = "px")
dev.off()
qplot(LNoV, data = set1)
dev.copy(png,file = "Learning v Set 1 No of Visits Histogram.png", height = 480, width = 480, units = "px")
dev.off()
#clustering
set1_clustered<-set1[clustering(set1$LNoV, set1$NoV),]
#histogram of clustered data
qplot(LNoV, data = set1_clustered)
NoV_set1_v_learningSet<-set1_clustered[-Outliers(set1$LNoV,set1$NoV),]
PU_set1_v_learningSet<-set1_clustered[-Outliers(set1$NoV,set1$PU),]
#linear regression of learning set vs. test set
plotLinearRegression(NoV_set1_v_learningSet$LNoV, NoV_set1_v_learningSet$NoV)+labs(y="Set 1 No of Visits", x="Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 1 No of Visits Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
#linear regression of test set variables
plotLinearRegression(PU_set1_v_learningSet$NoV, PU_set1_v_learningSet$PU)+labs(y="Set 1 Percent Unique", x="Set 1 No of Visits")
dev.copy(png,file = "Set 1 No of Visits vs PU Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
#linear regression coefficients
fitSet1<-lm(PU~NoV, data = set1_clustered)
fitSet1vsLearning<-lm(NoV~LNoV, data = set1_clustered)
#initial scatterplot
g<-ggplot(set2, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 2 No of Visits", x = "Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 2 No of Visits Scatterplot.png", height = 480, width = 480, units = "px")
dev.off()
qplot(LNoV, data = set2)
dev.copy(png,file = "Learning v Set 2 No of Visits Histogram.png", height = 480, width = 480, units = "px")
dev.off()
set2_clustered<-set2[clustering(set2$LNoV, set2$NoV),]
#histogram of clustered data
qplot(LNoV, data = set2_clustered)
NoV_set2_v_learningSet<-set2_clustered[-Outliers(set2_clustered$NoV,set2_clustered$LNoV),]
PU_set2_v_learningSet<-set2_clustered[-Outliers(set2$NoV,set2$PU),]
#linear regression of learning set vs. test set
plotLinearRegression(NoV_set2_v_learningSet$LNoV, NoV_set2_v_learningSet$NoV)+labs(y="Set 2 No of Visits", x="Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 2 No of Visits Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
#linear regression of test set variables
plotLinearRegression(PU_set2_v_learningSet$NoV, PU_set2_v_learningSet$PU)+labs(y="Set 2 Percent Unique", x="Set 2 No of Visits")
dev.copy(png,file = "Set 2 No of Visits vs PU Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
#linear regression coefficients
fitset2<-lm(PU~NoV, data = set2_clustered)
fitset2vsLearning<-lm(NoV~LNoV, data = set2_clustered)
#initial scatterplot
g<-ggplot(set3, aes(y = NoV, x = LNoV))
g+geom_point(col = "red", alpha = 0.2)+labs(y = "Set 3 No of Visits", x = "Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 3 No of Visits Scatterplot.png", height = 480, width = 480, units = "px")
dev.off()
qplot(LNoV, data = set3)
dev.copy(png,file = "Learning v Set 3 No of Visits Histogram.png", height = 480, width = 480, units = "px")
dev.off()
set3_clustered<-set3[clustering(set3$LNoV, set3$NoV),]
#histogram of clustered data
qplot(LNoV, data = set3_clustered)
NoV_set3_v_learningSet<-set3_clustered[-Outliers(set3_clustered$NoV,set3_clustered$LNoV),]
PU_set3_v_learningSet<-set3_clustered[-Outliers(set3$NoV,set3$PU),]
#linear regression of learning set vs. test set
plotLinearRegression(NoV_set3_v_learningSet$LNoV, NoV_set3_v_learningSet$NoV)+labs(y="Set 3 No of Visits", x="Learning Set No of Visits")
dev.copy(png,file = "Learning v Set 3 No of Visits Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
#linear regression of test set variables
plotLinearRegression(PU_set3_v_learningSet$NoV, PU_set3_v_learningSet$PU)+labs(y="Set 1 Percent Unique", x="Set 1 No of Visits")
dev.copy(png,file = "Set 3 No of Visits vs PU Scatterplot clustered.png", height = 480, width = 480, units = "px")
dev.off()
#linear regression coefficients
fitset3<-lm(PU~NoV, data = set3_clustered)
fitset3vsLearning<-lm(NoV~LNoV, data = set3_clustered)
